// The bits of this structure can be directly reinterpreted as an integer-packed
// color which uses the pixel_format::RGBA32 format.
export type color = struct {
	r: u8,
	g: u8,
	b: u8,
	a: u8,
};

// Everything in the pixel format structure is read-only.
export type pixel_format = struct {
	format: u32,
	palette: *palette,
	bits_per_pixel: u8,
	bytes_per_pixel: u8,
	padding: [2]u8,
	Rmask: u32,
	Gmask: u32,
	Bmask: u32,
	Amask: u32,
	Rloss: u8,
	Gloss: u8,
	Bloss: u8,
	Aloss: u8,
	Rshift: u8,
	Gshift: u8,
	Bshift: u8,
	Ashift: u8,
	refcount: int,
	next: nullable *pixel_format,
};

export type palette = struct {
	ncolors: int,
	colors: *color,
	version: u32,
	refcount: int,
};

export type pixel_format_value = enum u32 {
	UNKNOWN = 0x00000000,
	INDEX1LSB = 0x11100100,
	INDEX1MSB = 0x11200100,
	INDEX4LSB = 0x12100400,
	INDEX4MSB = 0x12200400,
	INDEX8 = 0x13000801,
	RGB332 = 0x14110801,
	XRGB4444 = 0x15120c02,
	RGB444 = 0x15120c02,
	XBGR4444 = 0x15520c02,
	BGR444 = 0x15520c02,
	XRGB1555 = 0x15130f02,
	RGB555 = 0x15130f02,
	XBGR1555 = 0x15530f02,
	BGR555 = 0x15530f02,
	ARGB4444 = 0x15321002,
	RGBA4444 = 0x15421002,
	ABGR4444 = 0x15721002,
	BGRA4444 = 0x15821002,
	ARGB1555 = 0x15331002,
	RGBA5551 = 0x15441002,
	ABGR1555 = 0x15731002,
	BGRA5551 = 0x15841002,
	RGB565 = 0x15151002,
	BGR565 = 0x15551002,
	RGB24 = 0x17101803,
	BGR24 = 0x17401803,
	XRGB8888 = 0x16161804,
	RGB888 = 0x16161804,
	RGBX8888 = 0x16261804,
	XBGR8888 = 0x16561804,
	BGR888 = 0x16561804,
	BGRX8888 = 0x16661804,
	ARGB8888 = 0x16362004,
	RGBA8888 = 0x16462004,
	ABGR8888 = 0x16762004,
	BGRA8888 = 0x16862004,
	ARGB2101010 = 0x16372004,
};

